import math
import matplotlib.pyplot as plt

# Define the solve_quadratic function
def solve_quadratic(a, b, c):
    """Solves a quadratic equation of the form ax^2 + bx + c = 0 and returns the solutions."""
    # Find the discriminant
    discriminant = b**2 - 4*a*c

    # Check if the discriminant is negative (no real solutions)
    if discriminant < 0:
        return "No real solutions"  # Or you could return complex solutions if needed

    # Calculate the solutions using the quadratic formula
    x1 = (-b + math.sqrt(discriminant)) / (2*a)
    x2 = (-b - math.sqrt(discriminant)) / (2*a)

    # Return the solutions
    if x1 == x2:  # If solutions are equal, return only one
        return x1
    else:
        return x1, x2

# Plotting the quadratic function for visualization
def plot_quadratic(a, b, c):
    x = list(range(-10, 11))  # Sample x values
    y = [a*xi**2 + b*xi + c for xi in x]
    plt.plot(x, y)
    plt.xlabel("x")
    plt.ylabel("y")
    plt.title(f"Quadratic function: {a}x^2 + {b}x + {c}")
    plt.grid(True)
    plt.axhline(y=0, color='r', linestyle='-')  # Add horizontal line at y=0
    plt.show()


# Stage 1: Hard-coding variables
print("Stage 1: Hard-coding variables")
a, b, c = 1, -3, 2
solutions = solve_quadratic(a, b, c)
print(f"Solutions for a={a}, b={b}, c={c}: {solutions}")
plot_quadratic(a,b,c)


# Stage 2: Keyboard input
print("\nStage 2: Keyboard Input")
a = float(input("Enter coefficient a: "))
b = float(input("Enter coefficient b: "))
c = float(input("Enter coefficient c: "))

solutions = solve_quadratic(a, b, c)
print(f"Solutions for a={a}, b={b}, c={c}: {solutions}")
plot_quadratic(a,b,c)

# Stage 3: Read from a file for a single set of inputs
# ... (Existing code)
plot_quadratic(a, b, c)

# Stage 4: Read from a file for multiple sets of inputs
# ... (Existing code)
#plot_quadratic(a, b, c) # Plotting multiple times inside loop can clutter the graph

# Example "input_multiple.txt" content:
# 1 -3 2
# 2 4 2
# 1 2 1
